{
  "invariants": {},
  "specifications": {
    "__main__.assert_le": {
      "decls": {},
      "logical_variables": {},
      "post": {
        "sexpr": [
          "(let ((a!1 (<= 0 (- (memory (+ fp (- 3))) (memory (+ fp (- 4))))))",
          "      (a!2 (> 340282366920938463463374607431768211456",
          "              (- (memory (+ fp (- 3))) (memory (+ fp (- 4)))))))",
          "  (and a!1 a!2))"
        ],
        "source": [
          "0 <= b - a and b - a < 2**128"
        ]
      },
      "pre": {
        "sexpr": [
          "true"
        ],
        "source": []
      },
      "storage_update": {}
    },
    "__main__.assert_nn": {
      "decls": {},
      "logical_variables": {},
      "post": {
        "sexpr": [
          "(and (<= 0 (memory (+ fp (- 3))))",
          "     (> 340282366920938463463374607431768211456 (memory (+ fp (- 3)))))"
        ],
        "source": [
          "0 <= a and a < 2**128"
        ]
      },
      "pre": {
        "sexpr": [
          "true"
        ],
        "source": []
      },
      "storage_update": {}
    },
    "__main__.assert_nn_le": {
      "decls": {},
      "logical_variables": {},
      "post": {
        "sexpr": [
          "(and (<= 0 (memory (+ fp (- 4))))",
          "     (<= (memory (+ fp (- 4))) (memory (+ fp (- 3)))))"
        ],
        "source": [
          "0 <= a and a <= b"
        ]
      },
      "pre": {
        "sexpr": [
          "(> 340282366920938463463374607431768211456 (memory (+ fp (- 3))))"
        ],
        "source": [
          "b < 2**128"
        ]
      },
      "storage_update": {}
    },
    "__main__.unsigned_div_rem": {
      "decls": {},
      "logical_variables": {},
      "post": {
        "sexpr": [
          "(let ((a!1 (+ (* (memory (+ ap (- 2))) (memory (+ fp (- 3))))",
          "              (memory (+ ap (- 1))))))",
          "  (and (<= 0 (memory (+ ap (- 2))))",
          "       (> 340282366920938463463374607431768211456 (memory (+ ap (- 2))))",
          "       (<= 0 (memory (+ ap (- 1))))",
          "       (< (memory (+ ap (- 1))) (memory (+ fp (- 3))))",
          "       (= (memory (+ fp (- 4))) a!1)))"
        ],
        "source": [
          "0 <= $Return.q and $Return.q <  2**128",
          "0 <= $Return.r and $Return.r < div",
          "value == $Return.q * div + $Return.r"
        ]
      },
      "pre": {
        "sexpr": [
          "(let ((a!1 (< (memory (+ fp (- 4)))",
          "              (* 340282366920938463463374607431768211456 (memory (+ fp (- 3)))))))",
          "  (and (< 0 (memory (+ fp (- 3))))",
          "       (>= 10633823966279326983230456482242756608 (memory (+ fp (- 3))))",
          "       a!1))"
        ],
        "source": [
          "0 < div",
          "div <= 10633823966279326983230456482242756608",
          "value < 2**128 * div"
        ]
      },
      "storage_update": {}
    }
  },
  "storage_vars": {}
}